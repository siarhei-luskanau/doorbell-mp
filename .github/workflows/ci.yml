name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  JAVA_VERSION: 21
  JAVA_DISTRIBUTION: 'zulu'

jobs:


  Lint:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/actions/setup-gradle@v4

      - run: ./gradlew wrapper --gradle-version latest --stacktrace
      - run: ./gradlew wrapper --gradle-version latest --stacktrace
      - uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: Update Gradle wrapper

      - run: ./gradlew ktlintFormat --stacktrace
      - uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: Ktlint format

      - run: ./gradlew ciLint --stacktrace



  UpdateScreenshot:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - uses: actions/checkout@v4

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/actions/setup-gradle@v4

      - run: ./gradlew ciUpdateScreenshot --stacktrace

      - uses: stefanzweifel/git-auto-commit-action@v6



  Tests:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        gradle-tasks: [
          "jvmTest"
        ]
        os: [ ubuntu-latest ]
        experimental: [ false ]
        emulator: [ false ]
        include:
          - gradle-tasks: "managedVirtualDeviceDebugAndroidTest -Pandroid.testoptions.manageddevices.emulator.gpu=swiftshader_indirect"
            os: ubuntu-latest
            experimental: false
            emulator: true
          - gradle-tasks: "iosSimulatorArm64Test"
            os: macos-latest
            experimental: true
            emulator: false
          - gradle-tasks: "testDebugUnitTest"
            os: ubuntu-latest
            experimental: true
            emulator: false
          - gradle-tasks: "jsBrowserTest"
            os: ubuntu-latest
            experimental: true
            emulator: false
          - gradle-tasks: "wasmJsBrowserTest"
            os: ubuntu-latest
            experimental: true
            emulator: false
    steps:

      - uses: actions/checkout@v4

      - name: Decode and write google-services.json
        env:
          ENCODED_GOOGLE_SERVICES_JSON: ${{ secrets.ENCODED_GOOGLE_SERVICES_JSON }}
        run: |
          echo $ENCODED_GOOGLE_SERVICES_JSON > ./composeApp/google-services.json

      - name: Decode and write GoogleService-Info.plist
        env:
          ENCODED_GOOGLE_SERVICE_INFO_PLIST: ${{ secrets.ENCODED_GOOGLE_SERVICE_INFO_PLIST }}
        run: |
          echo $ENCODED_GOOGLE_SERVICE_INFO_PLIST > ./iosAppComposeUi/iosApp/GoogleService-Info.plist

      - name: Enable KVM group perms
        if: matrix.emulator
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/actions/setup-gradle@v4

      - run: ./gradlew ciSdkManagerLicenses --stacktrace
        if: matrix.emulator

      - run: ./gradlew clean ${{ matrix.gradle-tasks }} --stacktrace



  Android:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4

      - name: Decode and write google-services.json
        env:
          ENCODED_GOOGLE_SERVICES_JSON: ${{ secrets.ENCODED_GOOGLE_SERVICES_JSON }}
        run: |
          echo $ENCODED_GOOGLE_SERVICES_JSON > ./composeApp/google-services.json

      - name: Decode and write GoogleService-Info.plist
        env:
          ENCODED_GOOGLE_SERVICE_INFO_PLIST: ${{ secrets.ENCODED_GOOGLE_SERVICE_INFO_PLIST }}
        run: |
          echo $ENCODED_GOOGLE_SERVICE_INFO_PLIST > ./iosAppComposeUi/iosApp/GoogleService-Info.plist

      - name: Decode and write keystore
        env:
          KEYSTORE: ${{ secrets.KEYSTORE }}
        run: |
          echo $KEYSTORE | base64 --decode > ./debug.keystore

      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/actions/setup-gradle@v4

      - name: Build release APK and AAB
        run: ./gradlew ciAndroid --stacktrace

      - name: Print signature composeApp-debug.apk
        run: keytool -printcert -jarfile composeApp/build/outputs/apk/debug/composeApp-debug.apk

      - name: Print signature composeApp-release.apk
        run: keytool -printcert -jarfile composeApp/build/outputs/apk/release/composeApp-release.apk

      - name: Print signature composeApp-release.aab
        run: keytool -printcert -jarfile composeApp/build/outputs/bundle/release/composeApp-release.aab

      - uses: actions/upload-artifact@v4
        with:
          name: composeApp-debug.apk
          path: composeApp/build/outputs/apk/debug/composeApp-debug.apk

      - uses: actions/upload-artifact@v4
        with:
          name: composeApp-release-unsigned.apk
          path: composeApp/build/outputs/apk/release/composeApp-release.apk

      - uses: actions/upload-artifact@v4
        with:
          name: composeApp-release.aab
          path: composeApp/build/outputs/bundle/release/composeApp-release.aab

      - name: Clean up keystore file
        run: rm debug.keystore



  Desktop:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, ubuntu-24.04-arm ]
    steps:

      - uses: actions/checkout@v4

      - name: Decode and write google-services.json
        env:
          ENCODED_GOOGLE_SERVICES_JSON: ${{ secrets.ENCODED_GOOGLE_SERVICES_JSON }}
        run: |
          echo $ENCODED_GOOGLE_SERVICES_JSON > ./composeApp/google-services.json

      - name: Decode and write GoogleService-Info.plist
        env:
          ENCODED_GOOGLE_SERVICE_INFO_PLIST: ${{ secrets.ENCODED_GOOGLE_SERVICE_INFO_PLIST }}
        run: |
          echo $ENCODED_GOOGLE_SERVICE_INFO_PLIST > ./iosAppComposeUi/iosApp/GoogleService-Info.plist

      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/actions/setup-gradle@v4

      - run: ./gradlew ciDesktop --stacktrace



  JsBrowser:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4

      - name: Decode and write google-services.json
        env:
          ENCODED_GOOGLE_SERVICES_JSON: ${{ secrets.ENCODED_GOOGLE_SERVICES_JSON }}
        run: |
          echo $ENCODED_GOOGLE_SERVICES_JSON > ./composeApp/google-services.json

      - name: Decode and write GoogleService-Info.plist
        env:
          ENCODED_GOOGLE_SERVICE_INFO_PLIST: ${{ secrets.ENCODED_GOOGLE_SERVICE_INFO_PLIST }}
        run: |
          echo $ENCODED_GOOGLE_SERVICE_INFO_PLIST > ./iosAppComposeUi/iosApp/GoogleService-Info.plist

      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/actions/setup-gradle@v4

      - run: ./gradlew ciJsBrowser --stacktrace

      - run: ./gradlew :composeApp:jsBrowserDistribution --stacktrace



#  WasmJsBrowser:
#    runs-on: ubuntu-latest
#    continue-on-error: true
#    steps:
#
#      - uses: actions/checkout@v4
#
#      - name: Decode and write google-services.json
#        env:
#          ENCODED_GOOGLE_SERVICES_JSON: ${{ secrets.ENCODED_GOOGLE_SERVICES_JSON }}
#        run: |
#          echo $ENCODED_GOOGLE_SERVICES_JSON > ./composeApp/google-services.json
#
#      - name: Decode and write GoogleService-Info.plist
#        env:
#          ENCODED_GOOGLE_SERVICE_INFO_PLIST: ${{ secrets.ENCODED_GOOGLE_SERVICE_INFO_PLIST }}
#        run: |
#          echo $ENCODED_GOOGLE_SERVICE_INFO_PLIST > ./iosAppComposeUi/iosApp/GoogleService-Info.plist
#
#      - uses: actions/setup-java@v4
#        with:
#          distribution: ${{ env.JAVA_DISTRIBUTION }}
#          java-version: ${{ env.JAVA_VERSION }}
#
#      - uses: gradle/actions/setup-gradle@v4
#
#      - run: ./gradlew ciWasmJsBrowser --stacktrace
#
#      - run: ./gradlew :composeApp:wasmJsBrowserDistribution --stacktrace



  iOS:
    runs-on: macos-latest
    steps:

      - uses: actions/checkout@v4

      - name: Decode and write google-services.json
        env:
          ENCODED_GOOGLE_SERVICES_JSON: ${{ secrets.ENCODED_GOOGLE_SERVICES_JSON }}
        run: |
          echo $ENCODED_GOOGLE_SERVICES_JSON > ./composeApp/google-services.json

      - name: Decode and write GoogleService-Info.plist
        env:
          ENCODED_GOOGLE_SERVICE_INFO_PLIST: ${{ secrets.ENCODED_GOOGLE_SERVICE_INFO_PLIST }}
        run: |
          echo $ENCODED_GOOGLE_SERVICE_INFO_PLIST > ./iosAppComposeUi/iosApp/GoogleService-Info.plist

      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - uses: gradle/actions/setup-gradle@v4

      - run: ./gradlew kspCommonMainKotlinMetadata --stacktrace

      - run: ./gradlew ciIos --stacktrace
